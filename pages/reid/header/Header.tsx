import React, { useState, useEffect, useRef } from 'react';
import classNames from 'classnames';
import headerStyle from '../header.module.scss';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import logo from '/assets/images/logo.png';

// ‘¥’•’≤’•÷Ä’´ ÷Å’∏÷Ç÷Å’°’Ø
const medicinesData = [
  {
    id: 1,
    name: "‘±’æ’°’Ω’ø’´’∂",
    genericName: "‘≤÷á’°÷Å’´’¶’∏÷Ç’¥’°’¢",
    image: "/assets/images/koshik_013.png",
    price: 45000,
    inStock: true,
    hasDelivery: true,
    category: "’à÷Ç’º’∏÷Ç÷Å÷Ñ’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂",
    manufacturer: "Roche",
    description: "‘¥’•’≤’°’¥’´’ª’∏÷Å ’∏÷Ç’º’∏÷Ç÷Å÷Ñ’°’µ’´’∂ ’∞’´’æ’°’∂’§’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’¢’∏÷Ç’™’¥’°’∂ ’∞’°’¥’°÷Ä",
    instruction: "‘±’æ’°’Ω’ø’´’∂’® ’Ø’´÷Ä’°’º’æ’∏÷Ç’¥ ’ß ÷Ñ’´’¥’´’°’©’•÷Ä’°’∫’´’°’µ’´ ’∞’•’ø ’∞’°’¥’°’ø’•’≤ ’¥’•’ø’°’Ω’ø’°’ø’´’Ø ’Ø’∏’¨’∏’º’•’Ø’ø’°’¨ ÷Ñ’°’≤÷Å’Ø’•’≤’´ ’¢’∏÷Ç’™’¥’°’∂ ’∞’°’¥’°÷Ä..."
  },
  {
    id: 2,
    name: "‘±’æ’•’¨’∏÷Ñ’Ω",
    genericName: "’Ñ’∏÷Ñ’Ω’´÷Ü’¨’∏÷Ñ’Ω’°÷Å’´’∂",
    image: "/assets/images/koshik_024.png",
    price: 1200,
    inStock: true,
    hasDelivery: true,
    category: "’Ä’°’Ø’°’¢’´’∏’ø’´’Ø’∂’•÷Ä",
    manufacturer: "Bayer",
    description: "‘º’°’µ’∂ ’Ω’∫’•’Ø’ø÷Ä’´ ’∞’°’Ø’°’¢’°’Ø’ø’•÷Ä’´’°’¨ ’§’•’≤’°’¥’´’ª’∏÷Å",
    instruction: "‘±’æ’•’¨’∏÷Ñ’Ω’® ÷Å’∏÷Ç÷Å’æ’°’Æ ’ß ’∑’∂’π’∏÷Ç’≤’´’∂’•÷Ä’´, ’¥’°’∑’Ø’´ ÷á ÷É’°÷É’∏÷Ç’Ø ’∞’µ’∏÷Ç’Ω’æ’°’Æ÷Ñ’∂’•÷Ä’´ ’æ’°÷Ä’°’Ø’∂’•÷Ä’´ ’¢’∏÷Ç’™’¥’°’∂ ’∞’°’¥’°÷Ä..."
  },
  {
    id: 3,
    name: "‘±’æ’°’¥’´’Ω",
    genericName: "’ñ’¨’∏÷Ç’ø’´’Ø’°’¶’∏’∂ ÷Ü’∏÷Ç÷Ä’∏’°’ø",
    image: "/assets/images/koshik_01.png",
    price: 850,
    inStock: true,
    hasDelivery: true,
    category: "‘±’¨’•÷Ä’£’∏’¨’∏’£’´’°",
    manufacturer: "GSK",
    description: "’î’©’°’µ’´’∂ ’Ω÷É÷Ä’•’µ ’°’¨’•÷Ä’£’´’Ø ’º’´’∂’´’ø’´ ’¢’∏÷Ç’™’¥’°’∂ ’∞’°’¥’°÷Ä",
    instruction: "‘±’æ’°’¥’´’Ω’® ’Ø’´÷Ä’°’º’æ’∏÷Ç’¥ ’ß ’Ω’•’¶’∏’∂’°’µ’´’∂ ÷á ’ø’°÷Ä’•’Ø’°’∂ ’°’¨’•÷Ä’£’´’Ø ’º’´’∂’´’ø’´ ’°’≠’ø’°’∂’´’∑’∂’•÷Ä’´ ’¢’∏÷Ç’™’¥’°’∂ ’∞’°’¥’°÷Ä..."
  },
  {
    id: 4,
    name: "‘±’Ω’∫’´÷Ä’´’∂",
    genericName: "‘±÷Å’•’ø’´’¨’Ω’°’¨’´÷Å’´’¨’°’©’©’∏÷Ç",
    image: "/assets/images/koshik_04.png",
    price: 120,
    inStock: true,
    hasDelivery: true,
    category: "‘±’∂’°’¨’£’•’ø’´’Ø’∂’•÷Ä",
    manufacturer: "Bayer",
    description: "’Ä’°’Ø’°’¢’∏÷Ä’¢’∏÷Ñ’°’µ’´’∂ ÷á ’ª’•÷Ä’¥’´’ª’•÷Å’∂’∏’≤ ’¥’´’ª’∏÷Å",
    instruction: "‘±’Ω’∫’´÷Ä’´’∂’® ’Ø’´÷Ä’°’º’æ’∏÷Ç’¥ ’ß ’ª’•÷Ä’¥’°’Ω’ø’´’≥’°’∂’´ ’´’ª’•÷Å’¥’°’∂, ÷Å’°’æ’´ ÷á ’¢’∏÷Ä’¢’∏÷Ñ’¥’°’∂ ’∂’æ’°’¶’•÷Å’¥’°’∂ ’∞’°’¥’°÷Ä..."
  },
  {
    id: 5,
    name: "‘±’¥’∏÷Ñ’Ω’´’Ø’¨’°’æ",
    genericName: "‘±’¥’∏÷Ñ’Ω’´÷Å’´’¨’´’∂ + ‘ø’¨’°’æ’∏÷Ç’¨’°’∂’°’©’©’∏÷Ç",
    image: "/assets/images/koshik_012.png",
    price: 450,
    inStock: false,
    hasDelivery: true,
    category: "’Ä’°’Ø’°’¢’´’∏’ø’´’Ø’∂’•÷Ä",
    manufacturer: "Sandoz",
    description: "’Ä’°’Ø’°’¢’°’Ø’ø’•÷Ä’´’°’¨ ’∞’°’¥’°’Ø÷Å’æ’°’Æ ’§’•’≤’°’¥’´’ª’∏÷Å",
    instruction: "‘±’¥’∏÷Ñ’Ω’´’Ø’¨’°’æ’® ’Ø’´÷Ä’°’º’æ’∏÷Ç’¥ ’ß ’ø’°÷Ä’¢’•÷Ä ’¢’°’Ø’ø’•÷Ä’´’°’¨ ’æ’°÷Ä’°’Ø’∂’•÷Ä’´ ’¢’∏÷Ç’™’¥’°’∂ ’∞’°’¥’°÷Ä..."
  }
];

const Header = () => {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [isSearchOpen, setIsSearchOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState([]);
  const searchInputRef = useRef(null);
  const router = useRouter();

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const openSearch = () => {
    setIsSearchOpen(true);
    setTimeout(() => {
      searchInputRef.current?.focus();
    }, 100);
  };

  const closeSearch = () => {
    setIsSearchOpen(false);
    setSearchQuery('');
    setSearchResults([]);
  };

  const handleSearchChange = (e) => {
    const query = e.target.value;
    setSearchQuery(query);

    if (query.trim().length >= 2) {
      const filtered = medicinesData.filter(medicine =>
        medicine.name.toLowerCase().includes(query.toLowerCase()) ||
        medicine.genericName.toLowerCase().includes(query.toLowerCase())
      );
      setSearchResults(filtered);
    } else {
      setSearchResults([]);
    }
  };

  const handleMedicineClick = (medicineId) => {
    router.push(`/medicine/${medicineId}`);
    closeSearch();
  };

  const handleKeyDown = (e) => {
    if (e.key === 'Escape') {
      closeSearch();
    }
  };

  useEffect(() => {
    if (isSearchOpen) {
      document.addEventListener('keydown', handleKeyDown);
      return () => {
        document.removeEventListener('keydown', handleKeyDown);
      };
    }
  }, [isSearchOpen]);

  return (
    <header className={classNames(headerStyle.header)}>
      <div className="header__container container">
        {!isSearchOpen ? (
          <>
            <div className="header__logo-section">
              <Link href="/" className="header__logo-link">
                <Image
                  src={logo}
                  alt="‘¥’•’≤’°’ø’∏÷Ç’∂ - ’Ä’∏÷Ç’Ω’°’¨’´ ’¢’™’∑’Ø’∏÷Ç’©’µ’∏÷Ç’∂"
                  width={160}
                  height={50}
                  quality={90}
                  priority={true}
                  className="header__logo-image"
                />
              </Link>
              <div className="header__brand-text">
                <span className="header__brand-name">MedPharm</span>
                <span className="header__brand-tagline">’Å’•÷Ä ’°’º’∏’≤’ª’∏÷Ç’©’µ’∏÷Ç’∂’® ’¥’•÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂’∂ ’ß</span>
              </div>
            </div>

            <nav className={classNames("header__nav", { "mobile-open": isMobileMenuOpen })}>
              <Link href="/about" className="header__nav-link" onClick={() => setIsMobileMenuOpen(false)}>
                <span className="nav-icon">‚ÑπÔ∏è</span>
                ’Ñ’•÷Ä ’¥’°’Ω’´’∂
              </Link>
              <Link href="/contacts" className="header__nav-link" onClick={() => setIsMobileMenuOpen(false)}>
                <span className="nav-icon">üìû</span>
                ‘ø’∏’∂’ø’°’Ø’ø’∂’•÷Ä
              </Link>
            </nav>

            <div className="header__actions">
              <div className="header__phone">
                <span className="phone-icon">üì±</span>
                <div className="phone-info">
                  <span className="phone-number">+374 XX XXX XXX</span>
                  <span className="phone-text">’á’∏÷Ç÷Ä’ª÷Ö÷Ä’µ’°</span>
                </div>
              </div>
              
              <button className="header__search-btn" onClick={openSearch}>
                <span className="search-icon">üîç</span>
              </button>

              <button 
                className={classNames("header__mobile-menu", { "active": isMobileMenuOpen })}
                onClick={toggleMobileMenu}
              >
                <span className="burger-line"></span>
                <span className="burger-line"></span>
                <span className="burger-line"></span>
              </button>
            </div>
          </>
        ) : (
          <div className="header__search-container">
            <input
              ref={searchInputRef}
              type="text"
              className="header__search-input"
              placeholder="’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’§’•’≤’´ ’°’∂’æ’°’∂’∏÷Ç’¥’®..."
              value={searchQuery}
              onChange={handleSearchChange}
            />
            <button className="header__search-close" onClick={closeSearch}>
              <span className="close-icon">‚úï</span>
            </button>
          </div>
        )}
      </div>

      {isSearchOpen && searchResults.length > 0 && (
        <div className="header__search-results">
          {searchResults.map((medicine) => (
            <div
              key={medicine.id}
              className="search-result-item"
              onClick={() => handleMedicineClick(medicine.id)}
            >
              <div className="result-info">
                <div className="result-name">{medicine.name}</div>
                <div className="result-generic">{medicine.genericName}</div>
                <div className="result-price">{medicine.price}÷è</div>
                <div className={`result-status ${medicine.inStock ? 'in-stock' : 'out-of-stock'}`}>
                  {medicine.inStock ? '‘±’º’Ø’° ’ß' : '‘±’º’Ø’° ’π’ß'}
                </div>
              </div>
              <div className="result-image">
                <div className="medicine-placeholder">üíä</div>
              </div>
            </div>
          ))}
        </div>
      )}

      {(isMobileMenuOpen || isSearchOpen) && (
        <div 
          className="mobile-overlay" 
          onClick={() => {
            setIsMobileMenuOpen(false);
            if (isSearchOpen) closeSearch();
          }}
        />
      )}
    </header>
  );
};

export { medicinesData };
export default Header;